image:
  - Visual Studio 2017

configuration:
  - Debug
  - Release

environment:
  matrix:
    - platform: x64
      config_target: VC-WIN64A
    - platform: x86
      config_target: VC-WIN32

install:
  - cinst nasm
  - set path=%path%;C:\Program Files\NASM

before_build:
  - git submodule update --init --recursive
  - cd openssl

build_script:
  # Configure Build Environment
  - if "%platform%" == "x86" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%platform%" == "x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

  # Configure Release/Debug Flag
  - if "%configuration%" == "Debug" set build_type_flag=--debug
  - if "%configuration%" == "Release" set build_type_flag=--release

  # Project Configuration
  - perl Configure %config_target% %build_type_flag% --prefix=C:\Temp\OpenSSL

  # Build
  - nmake

after_build:
  - nmake install
  
  # Extract Version
  - ps: C:\Temp\OpenSSL\bin\openssl.exe version | Select-String -Pattern '\d\.\d\.\d(-\w+)*' | % { $_.Matches[0].Value } | Out-File -Encoding ASCII .\version
  - set /P version=<version

  - set artifact_name=OpenSSL-%version%-msvc15-%Configuration%-%platform%.zip
  - 7z a "%artifact_name%" C:\Temp\OpenSSL\*
  - appveyor PushArtifact "%artifact_name%"

deploy:
  release: $(version)
  tag: $(version)
  force_update: true
  description: 'AppVeyor CD'
  provider: GitHub
  auth_token:
    secure: aWupJYJFNmN8GhkiNHaV412MnmQuedA9npndju27MejT80u1ERbwRvIt4qptWyDn
  artifact: $(artifact_name)
